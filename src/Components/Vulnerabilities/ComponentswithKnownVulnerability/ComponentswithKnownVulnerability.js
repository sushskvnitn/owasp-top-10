import React, { useEffect, useState } from 'react';
import $ from 'jquery'; // Importing the outdated jQuery version

const ComponentsWithKnownVulnerability = () => {
  const [userInput, setUserInput] = useState(''); // State to hold user input

  useEffect(() => {
    // Simulating a vulnerable operation using the outdated jQuery version
    $('#vulnerable-output').text('This is a vulnerable output using jQuery 1.12.4');
  }, []);

  const handleUserInputChange = (e) => {
    setUserInput(e.target.value);
  };

  const addUserInputAsHTML = () => {
    // Vulnerable operation: injecting user input as raw HTML
    $('#vulnerable-output').html(userInput);
  };

  const triggerXSS = () => {
    // Simulating an XSS vulnerability by injecting a script
    $('#vulnerable-output').html('<script>alert("XSS Vulnerability Triggered!");</script>');
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <div className="bg-white p-6 rounded-lg shadow-md w-full max-w-4xl">
        <h1 className="text-3xl font-bold text-center mb-4">Components with Known Vulnerability</h1>
        <p className="mb-4">
          Components with Known Vulnerabilities are a common source of security issues in web applications. Attackers can exploit these vulnerabilities to gain unauthorized access to sensitive data or perform other malicious activities. To protect your application from such threats, it is essential to keep all components up-to-date and apply security patches as soon as they are released.
        </p>

        <h2 className="text-2xl font-semibold mt-4">How to Prevent Components with Known Vulnerabilities</h2>
        <p className="mb-2">Here are some best practices to prevent components with known vulnerabilities:</p>
        <ul className="list-disc list-inside mb-4">
          <li>Regularly update all components, libraries, and frameworks used in your application to the latest versions.</li>
          <li>Monitor security advisories and alerts for the components you use and apply security patches promptly.</li>
          <li>Use tools like dependency checkers to identify and remediate vulnerable components in your application.</li>
          <li>Consider using security monitoring tools to detect and respond to potential security threats.</li>
          <li>Follow secure coding practices and implement security controls to reduce the impact of any security vulnerabilities.</li>
        </ul>

        <h2 className="text-2xl font-semibold mt-4">Demonstration Example</h2>
        <p className="mb-2">Below is a simple example of a vulnerable application that uses a known vulnerable component: Outdated jquery@1.12.4 : vulnerable to XSS</p>
        <p className="mb-4">For demonstration purposes, we have intentionally included a vulnerable component in this application. Enter text below to see the vulnerable component in action:</p>

        <div className="mb-4">
          <input
            type="text"
            value={userInput}
            onChange={handleUserInputChange}
            placeholder="Enter some text"
            className="border border-gray-300 p-2 rounded w-full"
          />
        </div>

        <div className="flex gap-4">
          <button
            onClick={addUserInputAsHTML}
            className="bg-green-500 text-white p-2 rounded hover:bg-green-600 transition duration-200"
          >
            Add User Input as HTML
          </button>

          <button
            onClick={triggerXSS}
            className="bg-blue-500 text-white p-2 rounded hover:bg-blue-600 transition duration-200"
          >
            Trigger XSS Vulnerability
          </button>
        </div>

        <div id="vulnerable-output" className="border border-gray-300 p-2 rounded mt-4 bg-gray-50"></div>

        <h2 className="text-2xl font-semibold mt-4">References</h2>
        <ul className="list-disc list-inside">
          <li>OWASP Top 10: Using Components with Known Vulnerabilities</li>
          <li>OWASP Dependency-Check</li>
          <li>NIST National Vulnerability Database</li>
        </ul>
      </div>
    </div>
  );
};

export default ComponentsWithKnownVulnerability;
